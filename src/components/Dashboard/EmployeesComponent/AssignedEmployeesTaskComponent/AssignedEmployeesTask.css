import { gql, useLazyQuery, useMutation, useQuery } from "@apollo/client";
import React, { useEffect, useState } from "react";
import { setShowEmployeesEditDialogBox } from "../../../../ReduxSlicers/ShowEmployeesDialogBoxSlicer";
import { useAppDispatch, useAppSelector } from "../../../../ReduxHooks";

import { fetchEmployeesDetailsProps } from "../../../../Types/EmployeesTaskTypes";
import "../AssignedEmployeesTaskComponent/ShowEmployeesTask.css"

const fetch_LoggedIn__employees_task_details_query = gql`
query s($fetchLoggedInEmployeeAssignedTaskDetailsParameters: fetchLoggedInEmployeeAssignedTaskDetailsInput!){
fetchLoggedInEmployeeAssignedTaskDetails(fetchLoggedInEmployeeAssignedTaskDetailsParameters: $fetchLoggedInEmployeeAssignedTaskDetailsParameters) {
  taskDesc
} 
}
`


function ShowEmployeesTask() {

  const savedEmployeeLoggedInUid = useAppSelector((state) => state.LocalStorageSlicer.loggedInSavedUid)

  const [fetchLoggedInEmployeeTask] = useLazyQuery(fetch_LoggedIn__employees_task_details_query, ({
    variables:{savedEmployeeLoggedInUid},
    onCompleted: (data) => {
      console.log(data);
    },
    onError:(err)=>{
      console.log(err)
    }
  }))
  useEffect(() => {
    fetchLoggedInEmployeeTask();
  }, [fetchLoggedInEmployeeTask]);

  const Dispatch = useAppDispatch();

  return (
    <div className="employees-task-data-container">
      {/* {
        fetchLoggedInEmployeeTask.fetchEmployeesTaskDetails.map((val: fetchEmployeesDetailsProps) => {
          console.log(val.emailId)
          return (
            <div className="employees-task-data-div">

              <div className="assigned-employees-task-heading-text-div">
                <strong>TASK NAME - : </strong>
                <p className="task-name">{val.name}</p>
              </div>
              <div className="assigned-employees-task-heading-text-div">
                <strong>TASK DESCRIPTION - : </strong>
                <p className="task-desc">{val.taskDesc}</p>
              </div>
              <div className="assigned-employees-task-heading-text-div">
                <strong>TASK DEADLINE - : </strong>
                <p>{val.deadLine}</p>
              </div>
              <div className="assigned-employees-task-heading-text-div">
                <strong>TASK ASSIGNED TO - : </strong>
                <span>{val.emailId}</span>
              </div>
              {/* {
                val.emailId.map((val: String) => {
                  console.log(val)
                  return <div>

                    <p>{val}</p>
                  </div>
                })
              } */}
              {/* <p className="emailid"></p> */}


            {/* </div>
          )
        })
      } */}

    </div>
  )
}

export default ShowEmployeesTask;